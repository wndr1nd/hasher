Сборка

1)Для сборки под (*nix) FreeBSD, Debian
cкачать архив или сделать клон ветки мастер https://github.com/wndr1nd/hasher
2)Для сборки программы под Debian удалить файл Makefile.freebsd, в папке с файлами выполнить команду make.
Для сборки без GUI передать параметру NOX11 любое значение. Например: make NOX11=true.
3)Для сборки программы под FreeBSD удалить файл Makefile.debian, в папке с файлами выполнить команду make.
Для сборки без GUI передать параметру NOX11 любое значение. Например: make NOX11=true.
4)Для сборки под Windows скачать программу https://disk.yandex.ru/d/Qls0JkGreIgU-w
разархивировать в папку, по умолчанию программа идет вместе с GUI.

Функции программы с GUI.

В левой части окна стоит выбрать папку в которой бет производиться хэширование файлов. Можно выбрать алгоритмы на свое усмотрение. Если алгоритмы не выбраны то по умолчанию будут использоваться все(SHA256, SHA1, CRC32, MD5).
Поле threads отвечает за работу программы в несколько потоков(функции Write_hash и  Check_hash). Можно ввести любое колличество потоков, при некорректном вводе программа будет работать в одном потоке. При передаче 0 программа будет использовать максимально доступное колличество потоков.
1) При нажатии на кнопку Write_hash программа начнет подсчет контрольных сумм файлов в текущей директории, и запись их в файлы с названием hash.<алгоритм>
Если был выбран параметр Recursive, программа так же будет записывать контрольные суммы всех файлов в  поддиректорях текущей директории.
Если вместе с параметром Recursive был выбран параметр Separate-file, программа будет создавать файлы hash.<алгоритм> во всех поддиректориях текущей директории и записывать в них контрольные суммы файлов находящихся с ними в одной директории.
2) При нажатии на кнопку Check_hash программа будет проверять наличие ошибок в файлах hash.<алгоритм>, при завершении с ошибкой будут выведены файлы в которых произошла ошибка, если ошибок не было, будет выведено no errors.
Если был выбран параметр Recursive, программа так же будет проверять контрольные суммы всех файлов в  поддиректорях текущей директории.
Если вместе с параметром Recursive был выбран параметр Separate-file, программа будет искать файлы hash.<алгоритм> во всех поддиректориях текущей директории и проверять в них контрольные суммы файлов находящихся с ними в одной директории.
3) При нажатии на кнопку Check_files пргграмма будет проверять наличие посторонних файлов в текущей директории. Если такие файлы есть, то будут выведены их названия.
Если же нет, то будет выведено no errors.
Если был выбран параметр Recursive, программа так же будет проверять наличие посторонних файлов в поддиректорях текущей директории.
Если вместе с параметром Recursive был выбран параметр Separate-file, программа будет искать посторонние файлы во всех поддиректориях текущей директории.
4) При нажатии на кнопку Clear_hash программа запросит подтверждение на удаление всех файлов hash.<алгоритм> в текущей директории и во всех поддиректориях.
При подтверждении файлы будут удалены.

Функции программы с CLI.
Программа имеет следующий шаблон:

Команды:

write_hash - начинает подсчет конторольных сумм, работает по аналогии с GUI.
check_hash - начинает проверку контрольных сумм, работает по аналогии с GUI.
check_files - начинает проверку файлов, работает по аналогии с GUI.
clear - удаляет все файлы hash.<алгоритм>, работает по аналогии с GUI.
Параметры:

--sha1 - для подсчета контрольных сумм будет выбран алгорим SHA1.
--sha256 - для подсчета контрольных сумм будет выбран алгорим SHA256.
--md5 - для подсчета контрольных сумм будет выбран алгорим MD5.
--crc32 - для подсчета контрольных сумм будет выбран алгорим CRC32.
--recursive - включает обработку поддиректории, работает по аналогии с GUI.
--separate-file - включает запись контрольных сумм в файлы hash.<алгоритм> в поддиректорях, работает по аналогии с GUI.
-j* - включает работу программы в несколько потокв, вместо * вписать колличество потоков. При -j0 будет выбрано максимально доступное колличество потоков.
--silent - отключает отображение текущего обрабатываемого файла.

Запуск.

windows
hasher.exe [--параметр][--параметр2] [команда] [путь]
*nix
./hasher [--параметр][--параметр2] [команда] [путь]

обязательными параметрами являются [команда] и [путь]
если в [--параметр] и [--параметр2] не переданы названия алгоритмов, то по умолчанию будут использоваться все(SHA256, SHA1, CRC32, MD5).
